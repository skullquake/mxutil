// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxutil.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * uses processbuilder to execute a process
 */
public class ja_processBuilder extends CustomJavaAction<java.lang.String>
{
	private java.lang.String str_stdin;
	private java.lang.String str_cwd;
	private java.lang.String str_pth;
	private java.lang.String str_arr_arg;
	private java.lang.String str_arg_k;

	public ja_processBuilder(IContext context, java.lang.String str_stdin, java.lang.String str_cwd, java.lang.String str_pth, java.lang.String str_arr_arg, java.lang.String str_arg_k)
	{
		super(context);
		this.str_stdin = str_stdin;
		this.str_cwd = str_cwd;
		this.str_pth = str_pth;
		this.str_arr_arg = str_arr_arg;
		this.str_arg_k = str_arg_k;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		java.lang.String ret=new java.lang.String();
		java.util.Stack<com.mendix.core.actionmanagement.CoreAction<?>> astack=getContext().getActionStack();
		try{
			java.lang.ProcessBuilder pb=new ProcessBuilder();
			pb.directory(new java.io.File(str_cwd==null?"/":str_cwd));
			java.util.List<java.lang.String> cmd=new java.util.ArrayList<java.lang.String>();
			cmd.add(str_pth);
			java.lang.reflect.Method method;
			try{
				int stacklvl=astack.size()-2;
				method=astack.get(stacklvl).getClass().getMethod("getName");
				com.mendix.core.Core.getLogger(this.toString()).info((java.lang.String)method.invoke(astack.get(stacklvl)));
				method=astack.get(stacklvl).getClass().getMethod("getVariable",java.lang.String.class);
				java.util.List<com.mendix.systemwideinterfaces.core.IMendixObject> lst=(java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixObject>)method.invoke(astack.get(stacklvl),str_arr_arg);
				java.util.ListIterator<com.mendix.systemwideinterfaces.core.IMendixObject> lstitr=lst.listIterator();
				while(lstitr.hasNext()){
					java.lang.String arg=lstitr.next().getValue(this.getContext(),str_arg_k);
					com.mendix.core.Core.getLogger(this.toString()).info(arg);
					cmd.add(arg);
				}
			}catch(Exception e){
				com.mendix.core.Core.getLogger(this.toString()).error(e);
			}
			pb.command(cmd);
			//--------------------------------------------------------------------------------
			java.lang.Process proc=pb.start();
			//java.io.OutputStream is=proc.getOutputStream();
			if(str_stdin!=null){
				java.io.OutputStream os=proc.getOutputStream();
				java.io.BufferedWriter bw=new java.io.BufferedWriter(new java.io.OutputStreamWriter(os));
				bw.write(str_stdin);
				bw.flush();
				bw.close();
			}
			java.io.InputStream is=proc.getInputStream();
			java.io.InputStreamReader isr=new java.io.InputStreamReader(is);
			java.io.BufferedReader br=new java.io.BufferedReader(isr);
			java.lang.String ln;
			while((ln=br.readLine())!=null){
				ret+=ln+"\n";
			}
		}catch(Exception e){
			com.mendix.core.Core.getLogger(this.toString()).error(e);
			throw e;
		}
		return ret;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ja_processBuilder";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
